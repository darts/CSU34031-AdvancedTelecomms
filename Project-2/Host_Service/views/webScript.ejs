<script>
    const threadAddr = "https://localhost:3000/thread?thread="
    const homeAddr = "https://localhost:3000/home"
    const newThreadAddr = "https://localhost:3000/newThread"
    const newPostAddr = "https://localhost:3000/newPost"
    let userName, key
    userName = 'darts'
    let curThread;

    let moveToThread = (threadID) => {
        fetch(threadAddr + threadID).then((res) => {
            return res.json()
        }).then(res => {
            console.log(res)
            document.body.innerHTML = res.html
            curThread = threadID
        }).catch(err => {
            console.log(err)
            alert("Error connecting to server")
        })
    }

    let returnHome = () => {
        fetch(homeAddr).then((res) => {
            return res.json()
        }).then(res => {
            // console.log(res)
            document.body.innerHTML = res.html
        }).catch(err => {
            console.log(err)
            alert("Error connecting to server")
        })
    }

    let postthread = () => {
        let text = document.getElementById('newthread-container').value
        let title = document.getElementById('newthread-title').value
        console.log(JSON.stringify({ user: userName, title: title, content: text }))

        fetch(newThreadAddr, {
            method: "POST",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ user: userName, title: title, content: text })
        }).then(res => {
            returnHome()
        })
        // alert("gotta actually send something")
        // console.log(document.getElementById('newthread-container').value)
    }

    let addPost = () => {
        let content = document.getElementById('newthreadPost').value
        fetch(newPostAddr, {
            method: "POST",
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ user: userName, thread: curThread, 'content': content })
        }).then(res => {
            moveToThread(curThread)
        })
    }

    let login = (userName) => {

    }

</script>
